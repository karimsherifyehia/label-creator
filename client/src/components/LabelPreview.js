import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, } from "@/components/ui/dialog";
import { formatCurrency } from "@/lib/utils";
import { Printer } from "lucide-react";
export function LabelPreview({ open, onOpenChange, itemData, onConfirm, isLoading, }) {
    if (!itemData)
        return null;
    return (_jsx(Dialog, { open: open, onOpenChange: onOpenChange, children: _jsxs(DialogContent, { className: "sm:max-w-md", children: [_jsxs(DialogHeader, { children: [_jsx(DialogTitle, { children: "Print Label Preview" }), _jsx(DialogDescription, { children: "Preview the label before printing. Confirm to send to printer." })] }), _jsxs("div", { className: "flex flex-col p-4 border rounded-md bg-white", children: [_jsxs("div", { className: "flex mb-4", children: [_jsx("div", { className: "bg-blue-900 text-white p-4 w-1/3", children: _jsx("div", { className: "font-bold text-2xl transform rotate-90 origin-left translate-x-2 translate-y-9", children: "DERHAL" }) }), _jsxs("div", { className: "w-2/3 p-2", children: [_jsx("div", { className: "mb-3", children: _jsx("p", { className: "text-sm", children: itemData.description || "" }) }), _jsx("div", { className: "mb-2", children: _jsx("h3", { className: "font-bold text-lg", children: itemData.name }) }), _jsx("div", { className: "flex justify-center text-center overflow-hidden mb-2", children: _jsx("div", { className: "barcode-text", children: itemData.barcode || itemData.id || "" }) }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-xl font-bold", children: formatCurrency(itemData.price) }), _jsx("span", { className: "text-lg font-semibold text-gray-600", children: "\u0627\u0644\u0633\u0639\u0631" })] })] })] }), _jsx("div", { className: "border-t pt-2 mt-2 text-center text-xs text-gray-500", children: "Preview only - actual label layout may vary" })] }), _jsxs(DialogFooter, { className: "sm:justify-between", children: [_jsx(Button, { type: "button", variant: "secondary", onClick: () => onOpenChange(false), children: "Cancel" }), _jsxs(Button, { type: "button", onClick: onConfirm, disabled: isLoading, children: [_jsx(Printer, { className: "mr-2 h-4 w-4" }), isLoading ? "Printing..." : "Print Label"] })] })] }) }));
}
